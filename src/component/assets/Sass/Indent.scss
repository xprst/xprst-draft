$LIST_STYLE_OL: decimal lower-alpha lower-roman;
$LIST_STYLE_UL: image disc circle square;
$LIST_STYLE_WIDTH: 1.2em;
$LIST_STYLE_MARGIN: 0.3em;
$LIST_STYLE_OUTER_WIDTH: $LIST_STYLE_MARGIN + $LIST_STYLE_WIDTH;
$MAX_INDENT: 10;

@function resets($startIndent, $endIndent) {
    $strRtn: '';
    @for $i from  $startIndent through $endIndent {
        @if $i == $endIndent {
            $strRtn: $strRtn + 'list-#{$i}'
        } @else {
            $strRtn: $strRtn + 'list-#{$i} '
        }
        
    }
    @return unquote($strRtn);
};

div.public-DraftEditor-content {
    p, ol, ul, pre, blockquote, h1, h2, h3, h4, h5, h6 {
        margin: 0;
        padding: 0;
        counter-reset: resets(1, $MAX_INDENT);
    }
    
    ol, ul {
        padding-left: 1.5em;
    }
    
    ol > li, ul > li {
        list-style-type: none;
    }
    
    li {
        &:before {
            display: inline-block;
            white-space: nowrap;
            width: $LIST_STYLE_WIDTH;
            margin-left: -1 * $LIST_STYLE_OUTER_WIDTH;
            margin-right: $LIST_STYLE_MARGIN;
            text-align: right;
        }
    }
    
    ol {
        li {
            padding-left: $LIST_STYLE_OUTER_WIDTH;
        }
    }

    ul {
        li {
            margin-left: $LIST_STYLE_OUTER_WIDTH;
        }
    }

    ul {
        @each $ulType in $LIST_STYLE_UL {
            li.unordered-list-item-#{$ulType} {
                &:before {
                    @if $ulType == 'image' { content: 'Ã˜' !important; }
                    @if $ulType == 'disc' { content: 'l' !important; }
                    @if $ulType == 'circle' { content: 'n' !important; }
                    @if $ulType == 'square' { content: 'p' !important; }
                    position: absolute;
                    font-family: 'Wingdings';
                    padding-top: 2px;
                    padding-bottom: 1px;
                    font-size: 12px;
                    text-align: center;
                }  
            }
        }
    }
    
    ol {
        @each $olType in $LIST_STYLE_OL {
            li.ordered-list-item-#{$olType} {
                counter-reset: resets(1, $MAX_INDENT);
                counter-increment: unquote('list-0');
                &:before {
                    content: unquote('counter(list-0, ' +  $olType + ')') '. ' !important;
                    position: absolute;
                }                
            }

            @for $i from 1 through $MAX_INDENT {
                li.ql-indent-#{$i}.ordered-list-item-#{$olType} {
                    counter-increment: unquote('list-#{$i}');
                    &:before {
                        content: unquote('counter(list-#{$i}, ' + $olType + ')') '. ' !important;
                        position: absolute;
                    }
                }                
                @if $i < $MAX_INDENT {
                    li.ql-indent-#{$i} {
                        counter-reset: resets(($i+1), $MAX_INDENT)
                    }            
                }
            }
        }
    }
    
    @for $i from 1 through $MAX_INDENT {
        ol {
            li.ql-indent-#{$i} {
                padding-left: 1.5em * $i + $LIST_STYLE_OUTER_WIDTH
            }
        }

        ul {
            li.ql-indent-#{$i} {
                margin-left: 1.5em * $i + $LIST_STYLE_OUTER_WIDTH
            }            
        }
    }
}
